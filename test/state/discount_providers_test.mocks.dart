// Mocks generated by Mockito 5.4.0 from annotations
// in clubeldv/test/state/discount_providers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:clubeldv/model/discount.dart' as _i3;
import 'package:clubeldv/repository/discount_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDiscount_1 extends _i1.SmartFake implements _i3.Discount {
  _FakeDiscount_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DiscountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscountRepository extends _i1.Mock
    implements _i4.DiscountRepository {
  MockDiscountRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);
  @override
  _i5.Future<List<_i3.Discount>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Discount>>.value(<_i3.Discount>[]),
      ) as _i5.Future<List<_i3.Discount>>);
  @override
  _i5.Future<_i3.Discount> getStarredDiscount() => (super.noSuchMethod(
        Invocation.method(
          #getStarredDiscount,
          [],
        ),
        returnValue: _i5.Future<_i3.Discount>.value(_FakeDiscount_1(
          this,
          Invocation.method(
            #getStarredDiscount,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Discount>);
}
